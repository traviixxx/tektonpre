apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: build-push
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: Image Build
    tekton.dev/tags: docker, build-image, push-image, dind
    tekton.dev/displayName: docker-build
    tekton.dev/platforms: "linux/amd64"
spec:
  params:
  - name: image
    type: string
  - name: app-git
    description: the git repo
  - name: uid
    description: uid
  - name: git-revision
    type: string
  workspaces:
  - name: task-pvc
    mountPath: /workspace/source
  volumes:
    - name: dind-certs
      emptyDir: {}
  steps:
  - name: build
    image: docker.io/library/docker:stable@sha256:18ff92d3d31725b53fa6633d60bed323effb6d5d4588be7b547078d384e0d4bf
    env:
    - name: DOCKER_PASSWORD
      valueFrom:
            secretKeyRef:
              name: my-secret
              key: password
    - name: DOCKER_USERNAME
      valueFrom:
          secretKeyRef:
              name: my-secret
              key: username
    # Connect to the sidecar over TCP, with TLS.
    - name: DOCKER_HOST
      value: tcp://localhost:2376
    # Verify TLS.
    - name: DOCKER_TLS_VERIFY
      value: '1'
    # Use the certs generated by the sidecar daemon.
    - name: DOCKER_CERT_PATH
      value: /certs/client
    workingDir: /workspace/source
    script: |
      set -e
      COMMIT=$(cat /workspace/source/commit-tag.txt)
      cd /workspace/source/testtekton
      echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
      docker build --no-cache -t $(params.image):$COMMIT .
    volumeMounts:
      - mountPath: /certs/client
        name: dind-certs
  - name: docker-push
    image: docker.io/library/docker:stable@sha256:18ff92d3d31725b53fa6633d60bed323effb6d5d4588be7b547078d384e0d4bf
    env:
    - name: DOCKER_PASSWORD
      valueFrom:
          secretKeyRef:
             name: my-secret
             key: password
    - name: DOCKER_USERNAME
      valueFrom:
          secretKeyRef:
              name: my-secret
              key: username 
    # Connect to the sidecar over TCP, with TLS.
    - name: DOCKER_HOST
      value: tcp://localhost:2376
    # Verify TLS.
    - name: DOCKER_TLS_VERIFY
      value: '1'
    # Use the certs generated by the sidecar daemon.
    - name: DOCKER_CERT_PATH
      value: /certs/client
    workingDir: /workspace/source/
    script: |
      COMMIT=$(cat /workspace/source/commit-tag.txt)
      cd /workspace/source/testtekton
      echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
      docker push $(params.image):$COMMIT
    volumeMounts:
      - mountPath: /certs/client
        name: dind-certs
  sidecars:
  - image: docker:dind
    name: server
    args:
      - --storage-driver=vfs
      - --userland-proxy=false
      - --debug
    securityContext:
      privileged: true
    env:
    # Write generated certs to the path shared with the client.
    - name: DOCKER_TLS_CERTDIR
      value: /certs
    volumeMounts:
    - mountPath: /certs/client
      name: dind-certs
    # Wait for the dind daemon to generate the certs it will share with the
    # client.
    readinessProbe:
      periodSeconds: 1
      exec:
        command: ['ls', '/certs/client/ca.pem']


